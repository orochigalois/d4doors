{"version":3,"file":"app.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACN0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gDAAgD;AAChaAAa;AACzC,UAAU;AACV;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,UAAU;AACV;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,UAAU;AACV;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,UAAU;AACV;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,U","sources":["webpack://d4doors/./scss/app.scss","webpack://d4doors/webpack/bootstrap","webpack://d4doors/webpack/runtime/make namespace object","webpack://d4doors/./js/app.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../scss/app.scss';\r\n\r\n$(function () {\r\n    initSlider();\r\n    initAccordion();\r\n\r\n    initMobileNav();\r\n    initHeader();\r\n    initIsotope__company();\r\n    initIsotope__project();\r\n    initIsotope__resource();\r\n    initIsotope__blog();\r\n\r\n    initAnchorScroll();\r\n});\r\nfunction initSlider() {\r\n    jQuery('.slider_section .slider-class').slick({\r\n        autoplay: true,\r\n        dots: true,\r\n        speed: 1000,\r\n        fade: false,\r\n        arrows: false,\r\n    });\r\n    jQuery('.project__slider__section .slider-class').slick({\r\n        autoplay: true,\r\n        dots: true,\r\n        speed: 300,\r\n        fade: true,\r\n        arrows: false,\r\n    });\r\n    jQuery('.slider_alt_1_section .slider-class').slick({\r\n        autoplay: false,\r\n        dots: false,\r\n        speed: 300,\r\n        fade: false,\r\n        arrows: true,\r\n        infinite: false,\r\n    });\r\n    jQuery('.slider_alt_1_section .slider-class').on('afterChange', function (event, slick, currentSlide) {\r\n        var totalSlides = slick.slideCount - 1; // Total slides (0-based index)\r\n        if (currentSlide === totalSlides) {\r\n            jQuery('.slider_alt_1_section .slider-class').addClass('last-slide');\r\n        } else {\r\n            jQuery('.slider_alt_1_section .slider-class').removeClass('last-slide');\r\n        }\r\n        if (currentSlide === 0) {\r\n            jQuery('.slider_alt_1_section .slider-class').addClass('first-slide');\r\n        } else {\r\n            jQuery('.slider_alt_1_section .slider-class').removeClass('first-slide');\r\n        }\r\n    });\r\n\r\n\r\n    jQuery('.slider__alt2 .slider-class').slick({\r\n        autoplay: false,\r\n        dots: false,\r\n        speed: 300,\r\n        fade: false,\r\n        arrows: false,\r\n        infinite: true,\r\n        slidesToShow: 1,\r\n        centerMode: true,\r\n        centerPadding: '220px',\r\n        responsive: [{\r\n            breakpoint: 991,\r\n            settings: {\r\n                centerMode: false,\r\n                centerPadding: '0',\r\n            }\r\n        }]\r\n    });\r\n    jQuery('.slider__alt3 .slider-class').slick({\r\n        autoplay: false,\r\n        dots: false,\r\n        speed: 300,\r\n        fade: false,\r\n        arrows: false,\r\n        infinite: true,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        centerMode: true,\r\n        centerPadding: '75px',\r\n        responsive: [{\r\n            breakpoint: 1150,\r\n            settings: {\r\n                slidesToShow: 2,\r\n            }\r\n        }, {\r\n            breakpoint: 900,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                // centerMode: false,\r\n                // centerPadding: '0',\r\n            }\r\n        }, {\r\n            breakpoint: 599,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                centerMode: false,\r\n                centerPadding: '0',\r\n            }\r\n        }]\r\n    });\r\n\r\n    // Custom navigation button click handlers\r\n    jQuery('.slider__alt3 .nav__button .prev').on('click', function () {\r\n        jQuery('.slider__alt3 .slider-class').slick('slickPrev');\r\n    });\r\n\r\n    jQuery('.slider__alt3 .nav__button .next').on('click', function () {\r\n        jQuery('.slider__alt3 .slider-class').slick('slickNext');\r\n    });\r\n\r\n    // Event listener for when the slider changes\r\n    jQuery('.slider__alt3 .slider-class').on('afterChange', function (event, slick, currentSlide) {\r\n        // Check if we're on the first or last slide\r\n        if (currentSlide === 0) {\r\n            // console.log('Reached the first slide');\r\n        }\r\n\r\n        if (currentSlide === slick.$slides.length - slick.options.slidesToShow) {\r\n            // console.log('Reached the last slide');\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction initIsotope__company() {\r\n    if (!$(\".result__masonry__company\").length) {\r\n        return;\r\n    }\r\n\r\n    // Initialize Isotope on the result masonry grid\r\n    var $grid = $('.result__masonry__company').isotope({\r\n        itemSelector: '.grid-item',\r\n        layoutMode: 'masonry'\r\n    });\r\n\r\n    // Filter items when filter button is clicked\r\n    $('.filter__company .filter__content ul li').on('click', function () {\r\n\r\n        $(\".filter__company .filter__btn\").removeClass(\"active\");\r\n        let keyword = $(this).text();\r\n\r\n\r\n        $(\".filter__company .filter__btn span\").text(keyword);\r\n        // Get the data-slug attribute from the clicked filter\r\n        var filterValue = $(this).attr('data-slug');\r\n\r\n        // If 'ALL' is selected, show all items\r\n        if (filterValue === 'all') {\r\n            $grid.isotope({ filter: '*' });\r\n        } else {\r\n            // Otherwise, filter based on the state slug\r\n            $grid.isotope({ filter: '.state__' + filterValue });\r\n        }\r\n\r\n        // Count the number of visible items after filtering\r\n        var visibleItemsCount = $grid.data('isotope').filteredItems.length;\r\n\r\n        // Update the result count somewhere on the page\r\n        $(\".filter__company .filter__number span\").text(visibleItemsCount);\r\n\r\n        // Update the active class for the filter buttons\r\n        $('.filter__company .filter__content ul li').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n\r\n\r\n    $(\".filter__company .filter__btn\").on(\"click\", document, function () {\r\n        if ($(this).hasClass(\"active\")) {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n        else {\r\n            $(\".filter__company .filter__btn\").removeClass(\"active\");\r\n            $(this).addClass(\"active\");\r\n        }\r\n\r\n    });\r\n\r\n\r\n}\r\nfunction initIsotope__project() {\r\n    if (!$(\".result__masonry__project\").length) {\r\n        return;\r\n    }\r\n\r\n    // Initialize Isotope on the result masonry grid\r\n    var $grid = $('.result__masonry__project').isotope({\r\n        itemSelector: '.grid-item',\r\n        layoutMode: 'masonry',\r\n        // masonry: {\r\n        //     columnWidth: 100\r\n        // }\r\n    });\r\n\r\n    // Filter items when filter button is clicked\r\n    $('.filter__project .filter__content ul li').on('click', function () {\r\n\r\n        $(\".filter__project .filter__btn\").removeClass(\"active\");\r\n        let keyword = $(this).text();\r\n\r\n\r\n        $(\".filter__project .filter__btn span\").text(keyword);\r\n        // Get the data-slug attribute from the clicked filter\r\n        var filterValue = $(this).attr('data-slug');\r\n\r\n        // If 'ALL' is selected, show all items\r\n        if (filterValue === 'all') {\r\n            $grid.isotope({ filter: '*' });\r\n        } else {\r\n            // Otherwise, filter based on the state slug\r\n            $grid.isotope({ filter: '.prod__' + filterValue });\r\n        }\r\n\r\n        // Count the number of visible items after filtering\r\n        var visibleItemsCount = $grid.data('isotope').filteredItems.length;\r\n\r\n        // Update the result count somewhere on the page\r\n        $(\".filter__project .filter__number span\").text(visibleItemsCount);\r\n\r\n        // Update the active class for the filter buttons\r\n        $('.filter__project .filter__content ul li').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n\r\n\r\n    $(\".filter__project .filter__btn\").on(\"click\", document, function () {\r\n        if ($(this).hasClass(\"active\")) {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n        else {\r\n            $(\".filter__project .filter__btn\").removeClass(\"active\");\r\n            $(this).addClass(\"active\");\r\n        }\r\n\r\n    });\r\n\r\n\r\n}\r\nfunction initIsotope__resource() {\r\n    if (!$(\".result__masonry__resource\").length) {\r\n        return;\r\n    }\r\n\r\n    // Initialize Isotope on the result masonry grid\r\n    var $grid = $('.result__masonry__resource').isotope({\r\n        itemSelector: '.grid-item',\r\n        layoutMode: 'masonry',\r\n        // masonry: {\r\n        //     columnWidth: 100\r\n        // }\r\n    });\r\n\r\n    // Filter items when filter button is clicked\r\n    $('.filter__resource .filter__content ul li').on('click', function () {\r\n\r\n        $(\".filter__resource .filter__btn\").removeClass(\"active\");\r\n        let keyword = $(this).text();\r\n\r\n\r\n        $(\".filter__resource .filter__btn span\").text(keyword);\r\n        // Get the data-slug attribute from the clicked filter\r\n        var filterValue = $(this).attr('data-slug');\r\n\r\n        // If 'ALL' is selected, show all items\r\n        if (filterValue === 'all') {\r\n            $grid.isotope({ filter: '*' });\r\n        } else {\r\n            // Otherwise, filter based on the state slug\r\n            $grid.isotope({ filter: '.type__' + filterValue });\r\n        }\r\n\r\n        // Count the number of visible items after filtering\r\n        var visibleItemsCount = $grid.data('isotope').filteredItems.length;\r\n\r\n        // Update the result count somewhere on the page\r\n        $(\".filter__resource .filter__number span\").text(visibleItemsCount);\r\n\r\n        // Update the active class for the filter buttons\r\n        $('.filter__resource .filter__content ul li').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n\r\n\r\n    $(\".filter__resource .filter__btn\").on(\"click\", document, function () {\r\n        if ($(this).hasClass(\"active\")) {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n        else {\r\n            $(\".filter__resource .filter__btn\").removeClass(\"active\");\r\n            $(this).addClass(\"active\");\r\n        }\r\n\r\n    });\r\n\r\n\r\n}\r\nfunction initIsotope__blog() {\r\n    if (!$(\".result__masonry__blog\").length) {\r\n        return;\r\n    }\r\n\r\n    // Initialize Isotope on the result masonry grid\r\n    var $grid = $('.result__masonry__blog').isotope({\r\n        itemSelector: '.grid-item',\r\n        layoutMode: 'masonry',\r\n        // masonry: {\r\n        //     columnWidth: 100\r\n        // }\r\n    });\r\n\r\n    // Filter items when filter button is clicked\r\n    $('.filter__blog .filter__content ul li').on('click', function () {\r\n\r\n        $(\".filter__blog .filter__btn\").removeClass(\"active\");\r\n        let keyword = $(this).text();\r\n\r\n\r\n        $(\".filter__blog .filter__btn span\").text(keyword);\r\n        // Get the data-slug attribute from the clicked filter\r\n        var filterValue = $(this).attr('data-slug');\r\n\r\n        // If 'ALL' is selected, show all items\r\n        if (filterValue === 'all') {\r\n            $grid.isotope({ filter: '*' });\r\n        } else {\r\n            // Otherwise, filter based on the state slug\r\n            $grid.isotope({ filter: '.type__' + filterValue });\r\n        }\r\n\r\n        // Count the number of visible items after filtering\r\n        var visibleItemsCount = $grid.data('isotope').filteredItems.length;\r\n\r\n        // Update the result count somewhere on the page\r\n        $(\".filter__blog .filter__number span\").text(visibleItemsCount);\r\n\r\n        // Update the active class for the filter buttons\r\n        $('.filter__blog .filter__content ul li').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n\r\n\r\n    $(\".filter__blog .filter__btn\").on(\"click\", document, function () {\r\n        if ($(this).hasClass(\"active\")) {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n        else {\r\n            $(\".filter__blog .filter__btn\").removeClass(\"active\");\r\n            $(this).addClass(\"active\");\r\n        }\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\nfunction initHeader() {\r\n\r\n    window.onscroll = function (ev) {\r\n        if (window.scrollY >= 140) {\r\n            $(\"#header\").addClass(\"is_sticky_now\");\r\n        }\r\n        else {\r\n            $(\"#header\").removeClass(\"is_sticky_now\");\r\n        }\r\n    };\r\n\r\n\r\n}\r\n/**\r\n * Smooth anchor scrolling\r\n */\r\nfunction initAnchorScroll() {\r\n    $('a[href*=\"#\"]:not([data-toggle])').click(function (event) {\r\n        if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\r\n            var target = $(this.hash);\r\n            target = target.length ? target : $('[name=\"' + this.hash.slice(1) + '\"]');\r\n            if (target.length && !target.parents('.woocommerce-tabs').length) {\r\n                event.preventDefault();\r\n                $('html, body').animate({\r\n                    scrollTop: target.offset().top\r\n                }, 1000);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction initAccordion() {\r\n    var acc = document.getElementsByClassName(\"accordion\");\r\n    var i;\r\n\r\n    for (i = 0; i < acc.length; i++) {\r\n        acc[i].addEventListener(\"click\", function () {\r\n            this.classList.toggle(\"active\");\r\n            var panel = this.nextElementSibling;\r\n            if (panel.style.maxHeight) {\r\n                panel.style.maxHeight = null;\r\n            } else {\r\n                panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n            }\r\n        });\r\n    }\r\n}\r\n// mobile menu init\r\nfunction initMobileNav() {\r\n    jQuery('body').mobileNav({\r\n        menuActiveClass: 'nav-active',\r\n        menuOpener: '.nav-opener',\r\n        hideOnClickOutside: true,\r\n        menuDrop: 'ul'\r\n    });\r\n}\r\n\r\n\r\n/*\r\n * Simple Mobile Navigation\r\n */\r\n;\r\n(function ($) {\r\n    function MobileNav(options) {\r\n        this.options = $.extend({\r\n            container: null,\r\n            hideOnClickOutside: false,\r\n            menuActiveClass: 'nav-active',\r\n            menuOpener: '.nav-opener',\r\n            menuDrop: '.nav-drop',\r\n            toggleEvent: 'click',\r\n            outsideClickEvent: 'click touchstart pointerdown MSPointerDown'\r\n        }, options);\r\n        this.initStructure();\r\n        this.attachEvents();\r\n    }\r\n    MobileNav.prototype = {\r\n        initStructure: function () {\r\n            this.page = $('html');\r\n            this.container = $(this.options.container);\r\n            this.opener = this.container.find(this.options.menuOpener);\r\n            this.drop = this.container.find(this.options.menuDrop);\r\n        },\r\n        attachEvents: function () {\r\n            var self = this;\r\n\r\n            if (activateResizeHandler) {\r\n                activateResizeHandler();\r\n                activateResizeHandler = null;\r\n            }\r\n\r\n            this.outsideClickHandler = function (e) {\r\n                if (self.isOpened()) {\r\n                    var target = $(e.target);\r\n                    if (!target.closest(self.opener).length && !target.closest(self.drop).length) {\r\n                        self.hide();\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.openerClickHandler = function (e) {\r\n                e.preventDefault();\r\n                self.toggle();\r\n            };\r\n\r\n            this.opener.on(this.options.toggleEvent, this.openerClickHandler);\r\n        },\r\n        isOpened: function () {\r\n            return this.container.hasClass(this.options.menuActiveClass);\r\n        },\r\n        show: function () {\r\n\r\n            $(\"body\").removeClass(\"overlay-open\");\r\n            $(\".team-overlay\").hide();\r\n            this.container.addClass(this.options.menuActiveClass);\r\n            if (this.options.hideOnClickOutside) {\r\n                this.page.on(this.options.outsideClickEvent, this.outsideClickHandler);\r\n            }\r\n        },\r\n        hide: function () {\r\n            this.container.removeClass(this.options.menuActiveClass);\r\n            if (this.options.hideOnClickOutside) {\r\n                this.page.off(this.options.outsideClickEvent, this.outsideClickHandler);\r\n            }\r\n        },\r\n        toggle: function () {\r\n            if (this.isOpened()) {\r\n                this.hide();\r\n            } else {\r\n                this.show();\r\n            }\r\n        },\r\n        destroy: function () {\r\n            this.container.removeClass(this.options.menuActiveClass);\r\n            this.opener.off(this.options.toggleEvent, this.clickHandler);\r\n            this.page.off(this.options.outsideClickEvent, this.outsideClickHandler);\r\n        }\r\n    };\r\n\r\n    var activateResizeHandler = function () {\r\n        var win = $(window),\r\n            doc = $('html'),\r\n            resizeClass = 'resize-active',\r\n            flag, timer;\r\n        var removeClassHandler = function () {\r\n            flag = false;\r\n            doc.removeClass(resizeClass);\r\n        };\r\n        var resizeHandler = function () {\r\n            if (!flag) {\r\n                flag = true;\r\n                doc.addClass(resizeClass);\r\n            }\r\n            clearTimeout(timer);\r\n            timer = setTimeout(removeClassHandler, 500);\r\n        };\r\n        win.on('resize orientationchange', resizeHandler);\r\n    };\r\n\r\n    $.fn.mobileNav = function (opt) {\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var method = args[0];\r\n\r\n        return this.each(function () {\r\n            var $container = jQuery(this);\r\n            var instance = $container.data('MobileNav');\r\n\r\n            if (typeof opt === 'object' || typeof opt === 'undefined') {\r\n                $container.data('MobileNav', new MobileNav($.extend({\r\n                    container: this\r\n                }, opt)));\r\n            } else if (typeof method === 'string' && instance) {\r\n                if (typeof instance[method] === 'function') {\r\n                    args.shift();\r\n                    instance[method].apply(instance, args);\r\n                }\r\n            }\r\n        });\r\n    };\r\n}(jQuery));"],"names":[],"sourceRoot":""}